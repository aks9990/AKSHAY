# === Upload CSV File ===
from google.colab import files
import io

uploaded = files.upload()

# === Import Libraries ===
import pandas as pd
import matplotlib.pyplot as plt
import seaborn as sns
from sklearn.model_selection import train_test_split
from sklearn.ensemble import RandomForestClassifier
from sklearn.metrics import classification_report, confusion_matrix

# === Load Dataset ===
filename = list(uploaded.keys())[0]  # Automatically get uploaded filename
df = pd.read_csv(io.BytesIO(uploaded[filename]))

# === Display Head ===
print("Dataset Head:")
print(df.head())

# === Select and Clean Data ===
selected_features = ['Severity', 'Temperature(F)', 'Humidity(%)', 'Pressure(in)', 
                     'Visibility(mi)', 'Wind_Speed(mph)', 'Weather_Condition']

# Drop rows with missing values in selected columns only
df = df[selected_features].dropna()

# One-hot encode categorical variable
df = pd.get_dummies(df, columns=['Weather_Condition'], drop_first=True)

# === Split Features and Target ===
X = df.drop('Severity', axis=1)
y = df['Severity']

# === Train/Test Split ===
X_train, X_test, y_train, y_test = train_test_split(X, y, test_size=0.3, random_state=42)

# === Train Model ===
model = RandomForestClassifier(n_estimators=100, random_state=42)
model.fit(X_train, y_train)

# === Predict and Evaluate ===
y_pred = model.predict(X_test)

print("\nClassification Report:")
print(classification_report(y_test, y_pred))

# === Confusion Matrix Plot ===
conf_matrix = confusion_matrix(y_test, y_pred)
plt.figure(figsize=(8, 6))
sns.heatmap(conf_matrix, annot=True, fmt='d', cmap='Blues')
plt.title('Confusion Matrix')
plt.xlabel('Predicted')
plt.ylabel('Actual')
plt.tight_layout()
plt.show()
